{"ast":null,"code":"var _jsxFileName = \"/Users/jimenacambronero/Desktop/Curso Practico React/criptomonedas/src/hooks/useCriptomoneda.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: bl;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 1.5rem;\n    margin-top: 1rem;\n    display: block;\n`;\n_c = Label;\nconst Select = styled.select`\n    width: 100%;\n    display:block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1rem;\n`;\n_c2 = Select;\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n  _s();\n\n  // console.log(opciones);\n  // State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectCripto = () => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      onChange: e => actualizarState(e.target.value),\n      value: state,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"- Seleccione -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), opciones.map(opcion => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opcion.CoinInfo.Name,\n        children: opcion.CoinInfo.FullName\n      }, opcion.CoinInfo.Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this); // Retornar state, interfaz y fn que modifica el state\n\n\n  return [state, SelectCripto, actualizarState];\n};\n\n_s(useCriptomoneda, \"1776uhJgKLksmDNg8QZIgfuVZfc=\");\n\nexport default useCriptomoneda;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"Select\");","map":{"version":3,"names":["React","Fragment","useState","styled","Label","label","Select","select","useCriptomoneda","stateInicial","opciones","state","actualizarState","SelectCripto","e","target","value","map","opcion","CoinInfo","Name","FullName","Id"],"sources":["/Users/jimenacambronero/Desktop/Curso Practico React/criptomonedas/src/hooks/useCriptomoneda.jsx"],"sourcesContent":["import React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: bl;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 1.5rem;\n    margin-top: 1rem;\n    display: block;\n`;\n\nconst Select = styled.select`\n    width: 100%;\n    display:block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1rem;\n`;\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n\n    // console.log(opciones);\n\n    // State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const SelectCripto = () => (\n        <Fragment>\n            <Label>{label}</Label>\n            <Select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">- Seleccione -</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\n                ))}\n            </Select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y fn que modifica el state\n    return [state, SelectCripto, actualizarState];\n}\n\nexport default useCriptomoneda;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,K;AAUN,MAAME,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,M;;AAUN,MAAME,eAAe,GAAG,CAACH,KAAD,EAAQI,YAAR,EAAsBC,QAAtB,KAAmC;EAAA;;EAEvD;EAEA;EACA,MAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BV,QAAQ,CAACO,YAAD,CAAzC;;EAEA,MAAMI,YAAY,GAAG,mBACjB,QAAC,QAAD;IAAA,wBACI,QAAC,KAAD;MAAA,UAAQR;IAAR;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MACI,QAAQ,EAAGS,CAAC,IAAIF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;MAEI,KAAK,EAAEL,KAFX;MAAA,wBAII;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,EAKKD,QAAQ,CAACO,GAAT,CAAaC,MAAM,iBAChB;QAAiC,KAAK,EAAEA,MAAM,CAACC,QAAP,CAAgBC,IAAxD;QAAA,UAA+DF,MAAM,CAACC,QAAP,CAAgBE;MAA/E,GAAaH,MAAM,CAACC,QAAP,CAAgBG,EAA7B;QAAA;QAAA;QAAA;MAAA,QADH,CALL;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,CAPuD,CAsBvD;;;EACA,OAAO,CAACX,KAAD,EAAQE,YAAR,EAAsBD,eAAtB,CAAP;AACH,CAxBD;;GAAMJ,e;;AA0BN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}