{"ast":null,"code":"var _jsxFileName = \"/Users/jimenacambronero/Desktop/Curso Practico React/criptomonedas/src/components/Formulario.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport Error from './Error';\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: #FFF;\n    transition: background-color .3s ease;\n    &:hover {\n        background-color: #326AC0;\n        cursor:pointer;\n    }\n`;\n_c = Boton;\n\nconst Formulario = _ref => {\n  _s();\n\n  let {\n    guardarMoneda,\n    guardarCriptomoneda\n  } = _ref;\n  // state del listado de criptomonedas\n  const [listacripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false);\n  const MONEDAS = [{\n    codigo: 'USD',\n    nombre: 'Dolar de Estados Unidos'\n  }, {\n    codigo: 'MXN',\n    nombre: 'Peso Mexicano'\n  }, {\n    codigo: 'EUR',\n    nombre: 'Euro'\n  }, {\n    codigo: 'ARG',\n    nombre: 'Libra Esterlina'\n  }]; // Utilizar useMoneda\n\n  const [moneda, SelectMonedas] = useMoneda('Elige tu Moneda', '', MONEDAS); // utilizar useCriptomoneda\n\n  const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '', listacripto); // Ejecutar llamado a la API\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n      const resultado = await axios.get(url);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n\n    consultarAPI();\n  }, []); // cuando el usuario hace submit\n\n  const cotizarMoneda = e => {\n    e.preventDefault(); // validar si ambos campos estan llenos\n\n    if (moneda === '' || criptomoneda === '') {\n      guardarError(true);\n      return;\n    } // pasar los datos al componente principal\n\n\n    guardarError(false);\n    guardarMoneda(moneda);\n    guardarCriptomoneda(criptomoneda);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: cotizarMoneda,\n    children: [error ? /*#__PURE__*/_jsxDEV(Error, {\n      mensaje: \"Todos los campos son obligatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(SelectMonedas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectCripto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Boton, {\n      type: \"submit\",\n      value: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Formulario, \"h4YninRGIBER/+L9GkNMyd6pJD0=\", false, function () {\n  return [useMoneda, useCriptomoneda];\n});\n\n_c2 = Formulario;\nexport default Formulario;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Boton\");\n$RefreshReg$(_c2, \"Formulario\");","map":{"version":3,"names":["React","useEffect","useState","styled","Error","useMoneda","useCriptomoneda","axios","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","MONEDAS","codigo","nombre","moneda","SelectMonedas","criptomoneda","SelectCripto","consultarAPI","url","resultado","get","data","Data","cotizarMoneda","e","preventDefault"],"sources":["/Users/jimenacambronero/Desktop/Curso Practico React/criptomonedas/src/components/Formulario.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Error from './Error';\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport axios from 'axios';\n\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: #FFF;\n    transition: background-color .3s ease;\n    &:hover {\n        background-color: #326AC0;\n        cursor:pointer;\n    }\n`\n\nconst Formulario = ({guardarMoneda,  guardarCriptomoneda }) => {\n\n    // state del listado de criptomonedas\n    const [ listacripto, guardarCriptomonedas ] = useState([]);\n    const [ error, guardarError] = useState(false);\n\n    const MONEDAS = [\n        { codigo: 'USD', nombre: 'Dolar de Estados Unidos' },\n        { codigo: 'MXN', nombre: 'Peso Mexicano' },\n        { codigo: 'EUR', nombre: 'Euro' },\n        { codigo: 'ARG', nombre: 'Libra Esterlina' }\n    ];\n\n    // Utilizar useMoneda\n    const [ moneda, SelectMonedas ] = useMoneda('Elige tu Moneda', '', MONEDAS);\n\n    // utilizar useCriptomoneda\n    const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '', listacripto);\n\n    // Ejecutar llamado a la API\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n\n            const resultado = await axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data);\n        }\n        consultarAPI();\n    }, []);\n\n\n    // cuando el usuario hace submit\n    const cotizarMoneda = e => {\n        e.preventDefault();\n\n        // validar si ambos campos estan llenos\n        if(moneda === '' || criptomoneda === '') {\n            guardarError(true);\n            return;\n        }\n\n        // pasar los datos al componente principal\n        guardarError(false);\n        guardarMoneda(moneda);\n        guardarCriptomoneda(criptomoneda);\n    }\n\n    return ( \n        <form\n            onSubmit={cotizarMoneda}\n        >\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n\n            <SelectMonedas />\n\n            <SelectCripto />\n\n            <Boton\n                type=\"submit\"\n                value=\"Calcular\"\n            />\n        </form>\n     );\n}\n \nexport default Formulario;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMD,K;;AAiBN,MAAME,UAAU,GAAG,QAA4C;EAAA;;EAAA,IAA3C;IAACC,aAAD;IAAiBC;EAAjB,CAA2C;EAE3D;EACA,MAAM,CAAEC,WAAF,EAAeC,oBAAf,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAAEa,KAAF,EAASC,YAAT,IAAyBd,QAAQ,CAAC,KAAD,CAAvC;EAEA,MAAMe,OAAO,GAAG,CACZ;IAAEC,MAAM,EAAE,KAAV;IAAiBC,MAAM,EAAE;EAAzB,CADY,EAEZ;IAAED,MAAM,EAAE,KAAV;IAAiBC,MAAM,EAAE;EAAzB,CAFY,EAGZ;IAAED,MAAM,EAAE,KAAV;IAAiBC,MAAM,EAAE;EAAzB,CAHY,EAIZ;IAAED,MAAM,EAAE,KAAV;IAAiBC,MAAM,EAAE;EAAzB,CAJY,CAAhB,CAN2D,CAa3D;;EACA,MAAM,CAAEC,MAAF,EAAUC,aAAV,IAA4BhB,SAAS,CAAC,iBAAD,EAAoB,EAApB,EAAwBY,OAAxB,CAA3C,CAd2D,CAgB3D;;EACA,MAAM,CAACK,YAAD,EAAeC,YAAf,IAA+BjB,eAAe,CAAC,uBAAD,EAA0B,EAA1B,EAA8BO,WAA9B,CAApD,CAjB2D,CAmB3D;;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMuB,YAAY,GAAG,YAAY;MAC7B,MAAMC,GAAG,GAAG,yEAAZ;MAEA,MAAMC,SAAS,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUF,GAAV,CAAxB;MAEAX,oBAAoB,CAACY,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAApB;IACH,CAND;;IAOAL,YAAY;EACf,CATQ,EASN,EATM,CAAT,CApB2D,CAgC3D;;EACA,MAAMM,aAAa,GAAGC,CAAC,IAAI;IACvBA,CAAC,CAACC,cAAF,GADuB,CAGvB;;IACA,IAAGZ,MAAM,KAAK,EAAX,IAAiBE,YAAY,KAAK,EAArC,EAAyC;MACrCN,YAAY,CAAC,IAAD,CAAZ;MACA;IACH,CAPsB,CASvB;;;IACAA,YAAY,CAAC,KAAD,CAAZ;IACAL,aAAa,CAACS,MAAD,CAAb;IACAR,mBAAmB,CAACU,YAAD,CAAnB;EACH,CAbD;;EAeA,oBACI;IACI,QAAQ,EAAEQ,aADd;IAAA,WAGKf,KAAK,gBAAG,QAAC,KAAD;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAAH,GAA2D,IAHrE,eAKI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QALJ,eAOI,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAPJ,eASI,QAAC,KAAD;MACI,IAAI,EAAC,QADT;MAEI,KAAK,EAAC;IAFV;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAhED;;GAAML,U;UAcgCL,S,EAGGC,e;;;MAjBnCI,U;AAkEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}